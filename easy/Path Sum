/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
bool solve(TreeNode* node, int sum)
{
    
    
    if(node->left==NULL && node->right==NULL)
    {
        if(sum-node->val==0)
        {
            return true;
        }
        return false;
    }
    bool left=false;
    bool right=false;
    if(node->left!=NULL)
    left =solve(node->left,sum-node->val);
    if(node->right!=NULL)
    right= solve(node->right,sum-node->val);
    return right || left;
}
    bool hasPathSum(TreeNode* root, int target) {
        if(root==NULL)return false;
       return  solve(root,target);
    }
};
