class Solution {
public:
// int solve(int i, int j, string &s, vector<vector<int>> & dp)
// {
//     if(i>j) return 0;
//     if(i==j)
//     {
//         return 0;
//     }
//     if(dp[i][j]!=-1) return dp[i][j];
//     if(s[i]==s[j])
//     {
//        return dp[i][j] =solve(i+1, j-1, s, dp);
//     }

//     return dp[i][j] = 1+ min(solve(i+1,j,s, dp), solve(i,j-1,s,dp));

// }
    int minInsertions(string s) {
        int n=s.length();
        vector<int> nxt(n), cur(n);
        for(int i=n-1;i>=0;i--)
        {
            for(int j=0;j<n;j++)
            {
                if(i<j)
                {
                    if(s[i]==s[j]) cur[j]=nxt[j-1];

                    else
                    cur[j]=1+min(nxt[j], cur[j-1]);
                }
                
            }
            nxt=cur;
        }

        return nxt[n-1];
    }
};
