/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int, map<int, multiset<int>>> mp;

        queue<pair<TreeNode*, pair<int, int>>> q;

        q.push({root, {0, 0}});

        while(!q.empty())
        {
            TreeNode* node=q.front().first;
            
            int col=q.front().second.first;
            int row=q.front().second. second;
            q.pop();
            mp[col][row].insert(node->val);
            
            if(node->left != NULL) q.push({node->left,{col-1, row+1}} );
            if(node->right != NULL) q.push({node->right,{ col+1, row+1}});



        }

vector<vector<int>> ans;
        for(auto i:mp)
        {
            vector<int> col;
            for(auto j: i.second)
            {
                col.insert(col.end(),j.second.begin(), j.second.end() );
            }
            ans.push_back(col);
        }

        return ans;

    }
};
