/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*, long long>> q;

        q.push({root, 0});

        long long maxi=1;

        while(!q.empty())
        {
            long long min_val=LLONG_MAX;
            long long max_val=LLONG_MIN;
            long long s=q.size();
            long long tm=q.front().second;
            for(int i=0;i<s;i++)
            {
                TreeNode* node=q.front().first;
                long long val=q.front().second-tm;
            
                max_val=max(max_val, val);
                
                q.pop();
                if(node->left != NULL)
                q.push({node->left, 2*val+1});


                if(node->right != NULL)
                q.push({node->right, 2*val+2});


            }

            maxi=max(maxi, max_val+1);
        }

        return maxi;
    }
};
