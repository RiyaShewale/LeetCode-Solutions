class Solution {
public:
    long long maxArea(vector<vector<int>>& coords) {
        map<long long,pair<long long,long long>>mppr;
        map<long long,pair<long long,long long>>mppc;
        long long maxrow=0;
        long long maxcol=0;
        long long mincol=INT_MAX;
        long long minrow=INT_MAX;
        for(auto i: coords)
            { 
                long long row=i[0];
                long long col=i[1];
                minrow=min(minrow, row);
                maxrow=max(maxrow, row);
                mincol=min(mincol, col);
                maxcol=max(maxcol, col);               


    // Initialize with proper limits
    if (mppr.find(row) == mppr.end()) {
        mppr[row] = {col, col};  // both min and max start as col
    } else {
        mppr[row].first = min(mppr[row].first, col);
        mppr[row].second = max(mppr[row].second, col);
    }

    if (mppc.find(col) == mppc.end()) {
        mppc[col] = {row, row};  // both min and max start as row
    } else {
        mppc[col].first = min(mppc[col].first, row);
        mppc[col].second = max(mppc[col].second, row);
    }



            }

        long long ans=0;

        for(auto i: mppr)
            {
                long long base=i.second.second-i.second.first;
                long long height= max(maxrow-i.first, i.first-minrow);
                long long area=base*height;
                ans=max(ans, area);
            }

                for(auto i: mppc)
            {
                long long base=i.second.second-i.second.first;
                long long height= max(maxcol-i.first, i.first-mincol);
                long long area=base*height;
                ans=max(ans, area);
            }

        return (ans==0)? -1: ans;

        
    }
};
