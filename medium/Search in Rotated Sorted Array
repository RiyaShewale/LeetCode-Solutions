class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n=nums.size();
        int idx=0;
        int target2=nums[n-1];
        int low=0;int high=n-1;
        while(low<=high)
        {
            int mid=(low+high)/2;

            if(nums[mid]<=target2)
            {
                high=mid-1;

            }

            else
            {
                idx=mid;
                low=mid+1;
            }
        }

        low=0;high=idx;
        while(low<=high)
        {
            int mid=(low+high)/2;

            if(nums[mid]==target)
            {
                return mid;
            }

            else if(nums[mid]<target)
            {
                low=mid+1;
            }

            else high=mid-1;

        }
        if(idx!=n-1)
        {
            low=idx+1;
        }
        high=n-1;

        while(low<=high)
        {
            int mid=(low+high)/2;

            if(nums[mid]==target)return mid;

            else if(nums[mid]<target)low=mid+1;

            else high=mid-1;
        }


        return -1;

    }
};
