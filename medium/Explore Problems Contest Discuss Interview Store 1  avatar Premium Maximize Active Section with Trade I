class Solution {
public:
    int maxActiveSectionsAfterTrade(string s) {
        int n=s.length();
        int ones=0;
        int zeros=0;
        vector<int> sums;
        for(int i=0;i<n;i++)
        {
            if(s[i]=='0')zeros++;
            else
            {
                ones++;
                if(zeros)
                sums.push_back(zeros);
                zeros=0;
                
            }
        }
        cout<<ones<<endl;
        if(zeros)
        sums.push_back(zeros);

        int i=0;
        int maxsum=0;
         if (sums.size() >= 2) {
            for (int i = 0; i < sums.size() - 1; i++) {
                maxsum = max(maxsum, sums[i] + sums[i+1]);
            }
        }


        return ones+maxsum;
    }
};
